<?xml version="1.0" encoding="utf-8"?>
<EntityPoolDefinitions>
	<!-- Entity Pool Definitions - defines the types of Pools to be created and the Entity Classes associated with them.

	Syntax for this file:
	
	***** "Definition" tag *****
		Required parameters:
			name: Name of the Pool for UI and debugging purposes
			emptyClass: Entity Class to use for the Inactive entities (See EmptyClass section below)
		Optional parameters:
			maxSize: Maximum size of Pool. If a new entity is needed and the pool is at this size, it will try to take from the active list. Otherwise, it will fail.
			hasAI: Boolean - Set to TRUE if this Pool contains Entity Classes which use AI
			defaultBookmarked: Boolean - Set to TRUE if entities created in Editor should have their "CreatedThroughPool" option marked as true by default
			forcedBookmarked: Boolean - Set to TRUE if entities should be bookmarked instead of created at load regardless of their "CreatedThroughPool" option
			 
		***** "Contains" subtag of "Definition" ***** 
		Purpose: List of all Entity Classes associated with this Definition
			 
		***** "Class" subtag of "Contains" ***** 
		Purpose: Entity Class association
		Required: Contains the name of the Entity Class
		Example: <Class>Human</Class>
		
		
	EmptyClass explanation:
	
		The EmptyClass is the Entity Class which is used to instantiate the empty pool entities. It must fill these requirements:
		1. It should create the dynamic class hierarchy which matches the one to be created by any Entity instantiated with any of the associated classes.
		2. It should not load any data (animation graphs, CGFs, etc.)

	-->
<!--
	<Definition name="Mutants" emptyClass="NullAI" maxSize="16" hasAI="1" defaultBookmarked="1" forcedBookmarked="0">
		<Contains>
			<Class>Spiker</Class>
		</Contains>
	</Definition>

	<Definition name="Animals" emptyClass="NullAI" maxSize="32" hasAI="1" defaultBookmarked="1" forcedBookmarked="0">
		<Contains>
			<Class>Deer</Class>
			<Class>DeerFemale</Class>
		</Contains>
	</Definition>
-->
	<Definition name="VehiclePartDetached" emptyClass="VehiclePartDetached" maxSize="16">
		<Contains>
			<Class>VehiclePartDetached</Class>
		</Contains>
	</Definition>

</EntityPoolDefinitions>
