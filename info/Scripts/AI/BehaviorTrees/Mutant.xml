<BehaviorTree>
	
	<Variables>
		<!-- these variables are not used in this BT, but need to be present to prevent a warning caused by BasicAI:OnReset() -->
		<Variable name="ExecuteSequence" />
		<Variable name="ExecuteInterruptibleSequence" />

		<Variable name="HasTarget" />
		<Variable name="TargetVisible" />
	</Variables>

	<SignalVariables>
		<Signal name="OnNewAttentionTarget" variable="HasTarget" value="true"/>
		<Signal name="OnNoTarget" variable="HasTarget" value="false"/>

		<Signal name="OnEnemySeen" variable="TargetVisible" value="true" />
		<Signal name="OnLostSightOfTarget" variable="TargetVisible" value="false" />

	</SignalVariables>

	<Timestamps>
		<Timestamp name="TargetSpotted" setOnEvent="OnEnemySeen" exclusiveTo="TargetLost"/>
		<Timestamp name="TargetLost" setOnEvent="OnLostSightOfTarget" exlusiveTo="TargetSpotted"/>
		<Timestamp name="EnteredCombat" setOnEvent="EnteredCombat"/>
	</Timestamps>

	<Root>
		<Priority>

			<Case condition="ExecuteSequence">
				<LuaBehavior name="ExecuteSequence" />
			</Case>

			<Case>

				<StateMachine>

					<!--
					=================================================
					Idle
					=================================================
					-->

					<State name="Idle">

						<Transitions>

							<Transition to="Combat" onEvent="OnEnemyDamage"/>

							<Transition to="Combat" onEvent="OnEnemySeen"/>
							<Transition to="Combat" onEvent="OnThreateningSeen"/>
							<Transition to="Combat" onEvent="OnBulletRain"/>
							<Transition to="Combat" onEvent="OnEnemyHeard"/>
							<Transition to="Combat" onEvent="OnThreateningSoundHeard"/>

							<Transition to="Alert" onEvent="OnSuspectedSoundHeard" />
							<Transition to="Alert" onEvent="OnInterestingSoundHeard" />

						</Transitions>

						<BehaviorTree>

							<Loop>
								<Sequence>

									<Log message="Idle behavior" />

									<SetAlertness value="0"/>

									<Priority>

										<!-- Sequence -->
										<Case condition="ExecuteInterruptibleSequence">
											<Sequence>
												<Log message="Executing ai sequence in idle" />
												<LuaBehavior name="ExecuteInterruptibleSequence" />
											</Sequence>
										</Case>

										<Case>
											<Sequence>
<!--
												<Log message="Waiting at wander position"/>
												<Wait duration="10" variation="10" />
-->
												<Log message="Wandering to a random position"/>
												<Selector>

													<Sequence>

														<SuppressFailure>
															<QueryTPS name="Mutant_Wander" register="RefPoint" />
														</SuppressFailure>

														<!-- If the AI gets off the mesh he can essentially infinite loop in wander, so remove him -->
														<ExecuteLua code="entity:RemoveIfOffMesh()" />

														<LuaGate code="return not entity:IsRefPointOffMesh()">
															<Move to="RefPoint" stance="Stand" speed="Walk" stopWithinDistance="5" avoidDangers="1"/>
														</LuaGate>

													</Sequence>

													<Log message="Could not wander to a random position" />
												</Selector>

											</Sequence>
										</Case>
									</Priority>
								</Sequence>
							</Loop>

						</BehaviorTree>
					</State>

					<!--
					=================================================
					Alert
					=================================================
					-->

					<State name="Alert">

						<Transitions>

							<Transition to="Idle" onEvent="GoToIdle" />

							<Transition to="Combat" onEvent="OnEnemyDamage"/>

							<Transition to="Combat" onEvent="OnEnemySeen"/>
							<Transition to="Combat" onEvent="OnThreateningSeen"/>
							<Transition to="Combat" onEvent="OnBulletRain"/>
							<Transition to="Combat" onEvent="OnEnemyHeard"/>
							<Transition to="Combat" onEvent="OnThreateningSoundHeard"/>

						</Transitions>

						<BehaviorTree>
							<Loop>
								<Sequence>

									<Log message="Alert behavior" />

									<SetAlertness value="1"/>
									<StopMovement waitUntilStopped="1" />

									<Parallel>

										<Sequence>
											<Wait duration="5.0" />
											<Parallel successMode="any">
												<WaitForEvent name="OnSuspectedSoundHeard" />
												<WaitForEvent name="OnInterestingSoundHeard" />
											</Parallel>
										</Sequence>

<!-- Could use this instead of looking - wander and check out the sound
											<SuppressFailure>
												<Sequence>
													<QueryTPS name="SDKGrunt_TargetPositionOnNavMesh" register="RefPoint"/>
													<Move to="RefPoint" speed="Run" stance="Stand" fireMode="Off" avoidDangers="1"/>
													<Wait duration="1" />
												</Sequence>
											</SuppressFailure>

-->

										<Sequence>
											<Animate name="AI_BecomeAlerted" urgent="0"/>
											<Loop>
												<SuppressFailure>
													<TurnBody towards="Target" />
												</SuppressFailure>
											</Loop>
											<Wait duration="10" variation="10" />
											<SendTransitionSignal name="GoToIdle" />
										</Sequence>

									</Parallel>
								</Sequence>
							</Loop>
						</BehaviorTree>
					</State>

					<!--
					=================================================
					Combat
					=================================================
					-->

					<State name="Combat">

						<Transitions>
							<Transition to="Idle" onEvent="OnTargetDead"/>
							<Transition to="Idle" onEvent="GoToIdle"/>
							<Transition to="Seek" onEvent="GoToSeek"/>
						</Transitions>

						<BehaviorTree>

							<Sequence>

								<Log message="Combat behavior" />

								<SetAlertness value="2"/>

								<Stance name="Alerted"/>

								<ExecuteLua code="entity:SelectPrimaryWeapon()"/>

								<ExecuteLua code="AI.ChangeParameter(entity.id,AIPARAM_FOVPRIMARY,360);"/>

								<!--
								=================================================
								Main combat loop
								=================================================
								-->

								<Loop>

									<Sequence>

										<Log message="Starting combat loop" />

										<Sequence>

											<SuppressFailure>

												<Loop>

													<Sequence>

													<Log message="Moving to target - sprint"/>
													
													<SuppressFailure>
														<LuaGate code="return entity:GetTargetDistance() &gt; 1.0">
															<Selector>

																<Move to="Target" stance="Stand" speed="Sprint" strafe="true" fireMode="Off" bodyOrientation="FullyTowardsMovementDirection" stopWithinDistance="2.0" />
																<SendTransitionSignal name="GoToIdle" />																

															</Selector>
														</LuaGate>
													</SuppressFailure>

													<Log message="Close to target"/>

													<SuppressFailure>
													<LuaGate code="return not (entity:GetTargetDistance() &gt; 2.5)">

														<Sequence>

															<Log message="Turning body and melee attacking"/>

															<Sequence>

															<Log message="Turning body towards target"/>

															<SuppressFailure>
																<TurnBody alignWith="Target" stopWithinAngle="5" />
															</SuppressFailure>

															<Log message="Melee attacking target"/>

															<Melee target="AttentionTarget" impactTime=".465" />
															<!--<Shoot at="Target" stance="Stand" fireMode="MeleeForced" duration="0.1"/>-->

															</Sequence>

														</Sequence>

													</LuaGate>
													</SuppressFailure>

													</Sequence>

												</Loop>

<!--
												<Parallel

													<Move to="Target" stance="Stand" speed="Sprint" strafe="true" stopWithinDistance="2.0" bodyOrientation="FullyTowardsMovementDirection" />

													<LoopUntilSuccess>

														<LuaGate code="return not (entity:GetTargetDistance() &gt; 2.1)">

															<Sequence>

																<Log message="Turning body and melee attacking"/>

																<Loop>

																<Sequence>

																<SuppressFailure>
																	<TurnBody alignWith="Target" stopWithinAngle="10" />
																</SuppressFailure>

																<Shoot at="Target" stance="Stand" fireMode="MeleeForced" duration="0.3"/>
																</Sequence>
																</Loop>

															</Sequence>

														</LuaGate>
														
													</LoopUntilSuccess>

												</Parallel>
-->
											</SuppressFailure>

											<Log message="End of mode and melee" />

										</Sequence>

										<!-- transition to "GoToSeek" after the target hasn't been seen for some seconds -->
										<SuppressFailure>

											<IfTime since="TargetLost" isMoreThan="3">

												<Sequence>

													<Log message="Target lost timeout" />
													<SendTransitionSignal name="GoToSeek"/>

												</Sequence>

											</IfTime>

										</SuppressFailure>

									</Sequence>

								</Loop>

							</Sequence>

						</BehaviorTree>

					</State>

					<!--
					=================================================
					Seek (ApproachLastKnownPosition)
					=================================================
					-->

					<State name="Seek">

						<Transitions>

							<Transition to="Search" onEvent="GoToSearch"/>

							<Transition to="Combat" onEvent="OnEnemyDamage"/>

							<Transition to="Combat" onEvent="OnEnemySeen"/>
							<Transition to="Combat" onEvent="OnThreateningSeen"/>
							<Transition to="Combat" onEvent="OnBulletRain"/>
							<Transition to="Combat" onEvent="OnEnemyHeard"/>
							<Transition to="Combat" onEvent="OnThreateningSoundHeard"/>

							<Transition to="Alert" onEvent="OnSuspectedSoundHeard" />
							<Transition to="Alert" onEvent="OnInterestingSoundHeard" />

						</Transitions>

						<BehaviorTree>

							<Sequence>

								<Log message="Seek behavior" />

								<Selector>

									<!-- run if far away -->
									<LuaGate code="return entity:GetTargetDistance() &gt; 15">

										<Selector>

											<!-- try exact positioning on where we saw the player
											<Sequence>
												<Log message="Starting on move to approximate sprint location" />
												<Move to="AttTarget" speed="Sprint" avoidDangers="0" stopWithinDistance="1"/>
												<Log message="Waiting on move to approximate sprint location" />
											</Sequence>
											 -->
											<!-- try rough positioning on where we saw the player -->
											<SuppressFailure>
												<Sequence>

													<Log message="Sprinting to approximate location" />

													<QueryTPS name="SDKGrunt_TargetPositionOnNavMesh" register="RefPoint"/>

													<LuaGate code="return not entity:IsRefPointOffMesh()">
														<Move to="RefPoint" speed="Sprint" avoidDangers="0"/>
													</LuaGate>

													<Log message="At approximate sprint location" />

													<Wait duration="3.0"/>

												</Sequence>
											</SuppressFailure>

										</Selector>

									</LuaGate>

									<!-- walk if close enough -->
									<LuaGate code="return not (entity:GetTargetDistance() &gt; 15)">

										<Selector>

											<!-- try exact positioning on where we saw the player
											<Sequence>
												<Log message="Starting on move to approximate walk location" />
												<Move to="AttTarget" speed="Walk" avoidDangers="0" stopWithinDistance="1"/>
												<Log message="Waiting on move to approximate walk location" />
											</Sequence>
											 -->
											<!-- try rough positioning on where we saw the player -->
											<SuppressFailure>
												<Sequence>

													<Log message="Walking to approximate location" />

													<QueryTPS name="SDKGrunt_TargetPositionOnNavMesh" register="RefPoint"/>
													<Move to="RefPoint" speed="Walk" avoidDangers="0"/>

													<Log message="At approximate walk location" />

													<Wait duration="3.0"/>

												</Sequence>
											</SuppressFailure>

										</Selector>

									</LuaGate>

								</Selector>

								<Log message="Transitioning to Search" />

								<SendTransitionSignal name="GoToSearch"/>

							</Sequence>

						</BehaviorTree>

					</State>

					<!--
					=================================================
							Search
					=================================================
					-->

					<State name="Search">

						<Transitions>

							<Transition to="Idle" onEvent="GoToIdle"/>

							<Transition to="Combat" onEvent="OnEnemyDamage"/>

							<Transition to="Combat" onEvent="OnEnemySeen"/>
							<Transition to="Combat" onEvent="OnThreateningSeen"/>
							<Transition to="Combat" onEvent="OnBulletRain"/>
							<Transition to="Combat" onEvent="OnEnemyHeard"/>
							<Transition to="Combat" onEvent="OnThreateningSoundHeard"/>

							<Transition to="Alert" onEvent="OnSuspectedSoundHeard" />
							<Transition to="Alert" onEvent="OnInterestingSoundHeard" />

						</Transitions>

						<BehaviorTree>

							<Sequence>

								<Log message="Search behavior" />

								<SetAlertness value="1"/>

								<PullDownThreatLevel/>

									<Loop>

										<SuppressFailure>

											<Sequence>

												<Log message="Searching random location for target" />

												<QueryTPS name="Mutant_Wander" register="RefPoint"/>
												<Move to="RefPoint" speed="Walk" stance="Alerted" avoidDangers="0"/>

												<Sequence>

													<Log message="Waiting at random search location" />

													<Wait duration="2"/>

												</Sequence>

											</Sequence>

										</SuppressFailure>

									</Loop>

								<Log message="Transitiong to Idle" />

								<SendTransitionSignal name="GoToIdle"/>

							</Sequence>

						</BehaviorTree>

					</State>

				</StateMachine>
			</Case>
		</Priority>
	</Root>
</BehaviorTree>
